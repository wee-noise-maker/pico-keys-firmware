on:
  push:
  pull_request:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  linux-build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        gnat_version: [^11]
        gprbuild_version: [^22]
    runs-on: ${{ matrix.os }}
    env:
      BBQUEUE_COMPILE_CHECKS: disabled
      BBQUEUE_RUNTIME_CHECKS: disabled
      BBQUEUE_STYLE_CHECKS: disabled
      BBQUEUE_CONTRACTS: disabled

    steps:
    - uses: actions/checkout@v2
    - uses: alire-project/setup-alire@v1
      with:
        toolchain: gprbuild${{ matrix.gprbuild_version }} gnat_native${{ matrix.gnat_version }} --disable-assistant

    - run: sudo apt install gcc-arm-none-eabi

    - run: cd synth_plugin_macro && make

    - run: alr build

    - run: |
          export CRATE_VERSION=$(alr show | grep Version | cut -d':' -f2 | xargs)
          echo CRATE_VERSION=$CRATE_VERSION >> $GITHUB_ENV
          echo UF2_FILENAME=pico_keys_firmware-${CRATE_VERSION}.uf2 >> $GITHUB_ENV

    - run: git clone https://github.com/raspberrypi/pico-sdk.git

    - run: cd pico-sdk/tools/elf2uf2 && cmake . && make

    - run: ./pico-sdk/tools/elf2uf2/elf2uf2 bin/pico_keys_firmware ${{ env.UF2_FILENAME }}

    - uses: actions/upload-artifact@v3
      with:
        name: elf-and-uf2
        path: |
          bin/pico_keys_firmware
          ${{ env.UF2_FILENAME }}

    - name: Upload release manifest
      if: (github.event_name == 'release')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ env.UF2_FILENAME}}
        asset_name: ${{ env.UF2_FILENAME}}
        asset_content_type: application/octet-stream
